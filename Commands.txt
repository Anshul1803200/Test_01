ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        File1.txt

nothing added to commit but untracked files present (use "git add" to track)

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git add File1.txt

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   File1.txt


ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git commit -m "Added File1"
[master (root-commit) 4ba9819] Added File1
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 File1.txt

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git config --global user.email "anshulguleria999@gmail.com"

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git config --global user.name "Anshul1803200"

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git status
On branch master
nothing to commit, working tree clean

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git remote add origin https://github.com/Anshul1803200/Test_01.git

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git push -u origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 220 bytes | 220.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Anshul1803200/Test_01.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git push -u origin master
Everything up-to-date
branch 'master' set up to track 'origin/master'.

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git log
commit 4ba981942bb3d609a9d625a1965632755d5d1730 (HEAD -> master, origin/master)
Author: Anshul1803200 <anshulguleria999@gmail.com>
Date:   Fri Feb 18 10:49:05 2022 +0530

    Added File1

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

ANSHUL@LAPTOP-00OTT0UU MINGW64 /d/Assignments of Company/Git_Project (master)
$
